name: test

on: push
  # push:
  #   branches:
  #   - master
  # pull_request:
  #   types: [opened, synchronize, repoened, edited]

jobs:
  tests:
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     python-version: [3.6, 3.7, 3.8]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: credential_digger_tests
          DBHOST: localhost 
          DBPORT: 5432
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@master 
        
    - name: Create PostgreSQL database
      run: |
        psql ${{ secrets.POSTGRES_USER }} -h 127.0.0.1:5432 -d credential_digger_tests -f sql/create_table.sql

    # - name: Set up Python ${{ matrix.python-version }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        # python-version: ${{ matrix.python-version }}

    - name: temp | install postgres
      run: pip install psycopg2-binary

    - name: temp | check connection to postgres
      run: python test_db.py
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: credential_digger_tests
        DBHOST: localhost
        DBPORT: ${{ job.services.postgres.ports[5432] }} 
    # - name: Install OS dependencies
    #   run: |
    #     sudo apt install -y build-essential python3-dev libhyperscan-dev
      
    # - name: Cache python dependencies
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/.cache/pip # This path is specific to Ubuntu
    #     key: ${{ runner.os }}-pip-${{ hashFiles('./requirements.txt') }}-${{ hashFiles('./tests/tests-requirements.txt') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-

    # - name: Install python dependencies
    #   run: |
    #     pip install -r ./requirements.txt
    #     pip install -r ./tests/tests-requirements.txt
    
    # - name: Run unit tests
    #   run: |
    #     pytest tests/unit_tests

    # - name: Run integration tests
    #   run: |
    #     pytest tests/integration_tests

    # - name: Run functional tests
    #   env: 
    #     POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
    #     POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #     POSTGRES_DB: credential_digger_tests
    #     DBHOST: localhost 
    #     DBPORT: 5432
    #     path_model: https://github.com/SAP/credential-digger/releases/download/PM-v1.0.1/path_model-1.0.1.tar.gz
    #     snippet_model: https://github.com/SAP/credential-digger/releases/download/SM-v1.0.0/snippet_model-1.0.0.tar.gz
    #   run: |
    #     pytest tests/functional_tests